#!/usr/bin/env python

"""
Copyright (C) 2015 Louis Dijkstra

This file is part of gonl-sv

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
"""

from __future__ import print_function, division
from optparse import OptionParser
import os
import sys
import math
import vcf

sys.path.insert(0, os.path.abspath(os.path.dirname(__file__))[:-3] + 'python')
from Variant import *

__author__ = "Louis Dijkstra"

usage = """%prog <haplotype-file> <position-file>

Reads in a haplotype file <haplotype-file> as generated by 
'extract-haplotypes.py' and discards all variants which position
is NOT in the list given in <position-file>. Every row in a position 
file should be 

<chr> <pos>

where <chr> is the chromosome and <pos> is the position on that 
chromosome

"""

def main():
	parser = OptionParser(usage=usage)
	parser.add_option("--leave-out", action="store_true", dest="leave_out", default=False, 
				  		help="Leaves all positions that are contained in the list OUT.")
	(options, args) = parser.parse_args()

	if (len(args)!=2):
		parser.print_help()
		return 1

	haplo_file = open(args[0], 'r')
	position_file = open(args[1], 'r')

	positions = [[0] for i in range(1,23)] 
	for l in position_file:
		values = l.split()
		positions[int(values[0]) - 1].append(int(values[1]))

	if options.leave_out:
		for line in haplo_file:
			values = line.split()
			if not int(values[2]) in positions[int(values[0]) - 1]:
				print(line, end='')
	else:
		for line in haplo_file:
			values = line.split()
			if int(values[2]) in positions[int(values[0]) - 1]:
				print(line, end='')
	
if __name__ == '__main__':
	sys.exit(main())

